# Unique name for this workflow
name: CI

# Definition when the workflow should run
on:
    push:
        branches:
            - master
        paths-ignore:
            - 'sfdx-project.json'
            - 'README.md'

# Jobs to be executed
jobs:
    formatting-and-lwc-tests:
        runs-on: ubuntu-latest
        steps:
            # Checkout the code in the pull request
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            # Cache node_modules to speed up the process
            - name: Restore node_modules cache
              id: cache-npm
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ env.cache-name }}-
                      npm-

            # Install npm dependencies for Prettier and Jest
            - name: 'Install npm dependencies'
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci

            # Prettier formatting
            - name: 'Code formatting'
              run: npm run prettier:verify

            # ESlint
            - name: 'Linting'
              run: npm run lint

            # LWC unit tests
            - name: 'LWC unit tests'
              run: npm run test:unit:coverage

            # Upload LWC code coverage data
            - name: 'Upload code coverage for LWC to Codecov.io'
              uses: codecov/codecov-action@v1
              with:
                  flags: LWC

    scratch-org-tests:
        runs-on: ubuntu-latest
        needs: formatting-and-lwc-tests
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              if: github.actor != 'dependabot[bot]'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # Checkout the code in the pull request
            - name: 'Checkout source code'
              if: github.actor != 'dependabot[bot]'
              uses: actions/checkout@v2

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              if: github.actor != 'dependabot[bot]'
              shell: bash
              run: |
                  echo ${{ secrets.DEVHUB_SFDX_URL}} > ./DEVHUB_SFDX_URL.txt
                  secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
                  if [ $secretFileSize == 1 ]; then
                      echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
                      exit 1;
                  fi

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              if: github.actor != 'dependabot[bot]'
              run: 'sfdx force:auth:sfdxurl:store -f ./DEVHUB_SFDX_URL.txt -a devhub -d'

            # Create scratch org
            - name: 'Create scratch org'
              if: github.actor != 'dependabot[bot]'
              run: 'sfdx force:org:create -f config/project-scratch-def.json -a quiz-ci -c -s -d 1'

            # Deploy source to scratch org
            - name: 'Push source'
              if: github.actor != 'dependabot[bot]'
              run: 'sfdx force:source:push'

            # Assign permission set
            - name: 'Assign permission set'
              if: github.actor != 'dependabot[bot]'
              run: 'sfdx force:user:permset:assign -n Quiz_Host'

            # Deploy test metadata
            - name: 'Deploy test metadata'
              if: github.actor != 'dependabot[bot]'
              run: sfdx force:mdapi:deploy -d test-metadata -w 10

            # Run Apex tests in scratch org
            - name: 'Run Apex tests'
              if: github.actor != 'dependabot[bot]'
              run: 'sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20'

            # Upload Apex code coverage data
            - name: 'Upload code coverage for Apex to Codecov.io'
              if: github.actor != 'dependabot[bot]'
              uses: codecov/codecov-action@v1
              with:
                  flags: Apex

            # Housekeeping
            - name: 'Delete scratch org'
              if: github.actor != 'dependabot[bot]' && always()
              run: 'sfdx force:org:delete -p -u quiz-ci'
